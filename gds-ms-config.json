{
  "name": "gds-ms-project",
  "path": "${output}",
  "properties": {
    "proxy": "proxy.assumption.edu.ph:3128",
    "host": "192.168.160.161",
    "apiHost": "http://${host}:8080",
    "password": "gds",
    "root": "/home/gds-server",
    "dbPath": "${root}/db-path",
    "output": "${root}/output",
    "sudo": "echo '${password}' | sudo -kS",
    "projectScripts": "${root}/gds-ms-generator/scripts",
    "maxInlined": "--max_inlined_source_size=610",
    "bower": "${root}/output/node_modules/.bin/bower",
    "*today": "new Date().getTime()"
  },
  "files": {
    "${output}/scripts/start.sh": [
      "mongod --fork --logpath=/app/db/log/mongod.log && forever /host/index.js ${maxInlined}"
    ],
    "${output}/client-scripts/start.sh": [
      "mongod --fork --logpath=/app/db/log/mongod.log",
      "cd /host",
      "npm rebuild node-sass",
      "gulp",
      "forever node_modules/.bin/http-server ${maxInlined}"
    ],
    "${output}/school-scripts/start.sh": [
      "mongod --fork --logpath=/app/db/log/mongod.log",
      "mongorestore -h localhost:27017 -d service_db /host/imports/",
      "forever /host/index.js ${maxInlined}"
    ],
    "${root}/start.sh": [
      "cd ${root}/gds-ms-generator",
      "${sudo} git pull",
      "${sudo} npm start",
      "sh ${root}/run.sh"
    ],
    "${root}/update.sh": [
      "${sudo} rm -R ${output}",
      "cd ${root}/gds-ms-generator",
      "${sudo} npm start",
      "cd ${root}",
      "sh init-modules.sh",
      "sh init-bower.sh",
      "cd ${root}/gds-ms-generator",
      "git checkout gds-assumption"
    ],
    "${root}/init-modules.sh": [
      "cd ${output}",
      "npm install body-parser",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install chai",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install chakram",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install change-case",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install connect-multiparty",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install cookie-parser",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install cors",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install express",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install express-interceptor",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install form-data",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install fs-extra",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-clean",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-express",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-git",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-jshint",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-mocha",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install http",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install http-server",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install jshint",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install jshint-stylish",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install lodash",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install log4js",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install mocha",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install moment",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install mongoose",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install morgan",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install password-hash",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install restler",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install run-sequence",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install should",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install simple-bufferstream",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install sinon",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install socket.io",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install socket.io-client",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install stream-buffers",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-nodemon",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install mongoose-paginate",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install mongoose-unique-validator",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install csv-generate",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install csv-write-stream",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install mocha-unfunk-reporter",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install multer",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install node-fs",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install bower",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-angular-templates",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-bower",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-concat",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-copy",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-html-replace",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-replace",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-sass",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-uglify",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-uglifycss",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install gulp-server",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install node-sass",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install pump",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install csv-parse",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install batchflow",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "npm install jsonwebtoken",
      "${sudo} sh ${projectScripts}/clear-ram.sh"
    ],
    "${root}/init-bower.sh": [
      "cd ${output}",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install angular",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install socket.io-client",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install angular-resource",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install angular-ui-router",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install angular-material",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install jquery",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install font-awesome",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install angular-material-data-table",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install moment",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install lodash",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install angular-cookies",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install md-color-picker",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install tinycolor",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install ng-file-upload",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install animate.css",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install font-awesome-animation",
      "${sudo} sh ${projectScripts}/clear-ram.sh",
      "${bower} install bootstrap"
    ]
  },
  "containers": {
    "templates": {
      "dockerTemplateFile": "./templates/docker-template.json",
      "scripts": {
        "windowScriptsTemplateFile": "./templates/scripts-windows-template.json",
        "unixScriptsTemplateFile": "./templates/scripts-unix-template.json"
      }
    },
    "serviceDocker": {
      "FROM": "rickzx98/gds-ms:#IMAGE_SERVICE_TAG",
      "MAINTAINER": "rickzx98@gmail.com",
      "RUN[0]": "export npm_config_proxy=${proxy} && export npm_config_https_proxy=${proxy} && git config --global --add http.proxy http://${proxy} && git config --global --add https.proxy http://${proxy} && npm config --global set https-proxy \"http://${proxy}\" && npm config --global set proxy \"http://${proxy}\"",
      "RUN[1]": "echo \"cache-${today}\" && git clone #REPO /host && npm config set logfd /app/log/system.log",
      "WORKDIR": "/host",
      "RUN[2]": "echo \"{\"proxy\":\"http://${proxy}\", \"https-proxy\":\"http://${proxy}\"}\" > .bowerrc",
      "RUN[3]": "mkdir node_modules",
      "RUN[4]": "mkdir bower_components",
      "ENV[0]": "PORT 3000",
      "ENV[1]": "APP_LOG /app/log/system.log",
      "ENV[2]": "DB_HOST localhost",
      "ENV[3]": "DB service_db",
      "ENV[4]": "DB_TEST service_db_test",
      "ENV[5]": "DB_PORT 27017",
      "ENV[6]": "DB_PORT_TEST 27017",
      "ENV[7]": "DB_HOST_TEST localhost",
      "CMD": "mongod --fork --logpath=/app/db/log/mongod.log && forever /host/index.js",
      "EXPOSE": "3000"
    },
    "services": [
      {
        "priority": "20",
        "name": "user-service",
        "parameters": {
          "#DOMAIN_SERVICE": "user_service",
          "#DBPATH": "${dbPath}/user-db/",
          "#REPO": "https://github.com/great-design-and-systems/user-service.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3"
        },
        "mounts": {
          "/app/log": "${output}/user-log/",
          "/data/db": "${dbPath}/user-db/",
          "/app/scripts/": "${output}/scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "docker": {
          "cmd": "npm run container-start"
        }
      },
      {
        "priority": "19",
        "name": "security-service",
        "parameters": {
          "#DOMAIN_SERVICE": "security_service",
          "#DBPATH": "${dbPath}/security-db/",
          "#REPO": "https://github.com/great-design-and-systems/security-service.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3",
          "#SCHOOL_CONFIG_SERVICE_PORT": "NONE"
        },
        "mounts": {
          "/app/log": "${output}/security-log/",
          "/data/db": "${dbPath}/security-db/",
          "/app/scripts/": "${output}/scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "environments": {
          "ALLOWED_HOSTS": "${host}"
        },
        "docker": {
          "cmd": "npm run container-start"
        }
      },
      {
        "priority": "18",
        "name": "faculty-service",
        "parameters": {
          "#DOMAIN_SERVICE": "faculty_service",
          "#DBPATH": "${dbPath}/faculty-db/",
          "#REPO": "https://github.com/great-design-and-systems/faculty-service.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3"
        },
        "mounts": {
          "/app/log": "${output}/faculty-log/",
          "/data/db": "${dbPath}/faculty-db/",
          "/app/scripts/": "${output}/scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "docker": {
          "cmd": "npm run container-start"
        }
      },
      {
        "priority": "17",
        "name": "student-service",
        "parameters": {
          "#DOMAIN_SERVICE": "student_service",
          "#DBPATH": "${dbPath}/student-db/",
          "#REPO": "https://github.com/great-design-and-systems/student-service.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3"
        },
        "mounts": {
          "/app/log": "${output}/student-log/",
          "/data/db": "${dbPath}/student-db/",
          "/app/scripts/": "${output}/scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "docker": {
          "cmd": "npm run container-start"
        }
      },
      {
        "priority": "16",
        "name": "time-service",
        "parameters": {
          "#DOMAIN_SERVICE": "time_service",
          "#DBPATH": "${dbPath}/time-db/",
          "#REPO": "https://github.com/great-design-and-systems/time-service.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3"
        },
        "mounts": {
          "/app/log": "${output}/time-log/",
          "/data/db": "${dbPath}/time-db/",
          "/app/scripts/": "${output}/scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "docker": {
          "cmd": "npm run container-start"
        }
      },
      {
        "priority": "15",
        "name": "file-service",
        "parameters": {
          "#DOMAIN_SERVICE": "file_service",
          "#DBPATH": "${dbPath}/file-db/",
          "#REPO": "https://github.com/great-design-and-systems/file-service.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3"
        },
        "mounts": {
          "/app/log": "${output}/file-log/",
          "/data/db": "${dbPath}/file-db/",
          "/app/scripts/": "${output}/scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "docker": {
          "cmd": "npm run container-start"
        }
      },
      {
        "priority": "14",
        "name": "export-service",
        "parameters": {
          "#DOMAIN_SERVICE": "export_service",
          "#DBPATH": "${dbPath}/export-db/",
          "#REPO": "https://github.com/great-design-and-systems/export-service.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3"
        },
        "mounts": {
          "/app/log": "${output}/export-log/",
          "/data/db": "${dbPath}/export-db/",
          "/app/scripts/": "${output}/scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "docker": {
          "cmd": "npm run container-start"
        }
      },
      {
        "priority": "13",
        "name": "school-config-service",
        "parameters": {
          "#DOMAIN_SERVICE": "school_config_service",
          "#DBPATH": "${dbPath}/school-config-db/",
          "#REPO": "-b gds-assumption --single-branch https://github.com/great-design-and-systems/school-config-service.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3"
        },
        "mounts": {
          "/app/log": "${output}/school-config-log/",
          "/data/db": "${dbPath}/school-config-db/",
          "/app/scripts/": "${output}/scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "docker": {
          "cmd": "npm run container-start"
        }
      },
      {
        "priority": "12",
        "name": "import-service",
        "parameters": {
          "#DOMAIN_SERVICE": "import_service",
          "#DBPATH": "${dbPath}/import-db/",
          "#REPO": "https://github.com/great-design-and-systems/import-service.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3"
        },
        "links": [
          "faculty_service",
          "student_service",
          "file_service"
        ],
        "mounts": {
          "/app/log": "${output}/import-log/",
          "/data/db": "${dbPath}/import-db/",
          "/app/scripts/": "${output}/scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "docker": {
          "cmd": "npm run container-start"
        }
      },
      {
        "priority": "11",
        "name": "gds-ts-api",
        "database": false,
        "parameters": {
          "#DOMAIN_SERVICE": "gds_ts_service",
          "#DBPATH": "${dbPath}/gds-ts-api-db/",
          "#REPO": "https://github.com/great-design-and-systems/gds-ms-api.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3"
        },
        "links": [
          "user_service",
          "security_service",
          "faculty_service",
          "time_service",
          "student_service",
          "file_service",
          "export_service",
          "import_service",
          "school_config_service"
        ],
        "port": "9000:3000",
        "mounts": {
          "/app/log": "${output}/gds-ts-api-log/",
          "/data/db": "${dbPath}/gds-ts-api-db/",
          "/app/scripts/": "${output}/scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "docker": {
          "cmd": "npm run container-start"
        },
        "environments": {
          "TEMP_DIR": "/app"
        }
      },
      {
        "priority": "10",
        "name": "gds-terminal",
        "database": false,
        "parameters": {
          "#DOMAIN_SERVICE": "gds_terminal",
          "#DBPATH": "${dbPath}/gds-terminal-db/",
          "#REPO": "https://github.com/great-design-and-systems/gds-terminal.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3"
        },
        "environments": {
          "API_HOST": "${apiHost}"
        },
        "port": "9005:3000",
        "mounts": {
          "/app/log": "${output}/gds-terminal-log/",
          "/data/db": "${dbPath}/gds-terminal-db/",
          "/app/scripts/": "${output}/client-scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "docker": {
          "cmd": "npm run container-start"
        }
      },
      {
        "priority": "9",
        "name": "gds-lrts",
        "database": false,
        "parameters": {
          "#DOMAIN_SERVICE": "gds_lrts",
          "#DBPATH": "${dbPath}/gds-lrts-db/",
          "#REPO": "https://github.com/great-design-and-systems/gds-lrts.git",
          "#MAINTAINER": "rickzx98@gmail.com",
          "#IMAGE_SERVICE_TAG": "0.3"
        },
        "environments": {
          "API_HOST": "${apiHost}"
        },
        "port": "9006:3000",
        "mounts": {
          "/app/log": "${output}/gds-lrts-log/",
          "/data/db": "${dbPath}/gds-lrts-db/",
          "/app/scripts/": "${output}/client-scripts/",
          "/host/node_modules/": "${output}/node_modules/",
          "/host/bower_components/": "${output}/bower_components/"
        },
        "docker": {
          "cmd": "npm run container-start"
        }
      }
    ]
  }
}